{"version":3,"sources":["components/Tower/Tower.js","firebase.js","components/GameComplete/GameComplete.js","components/Game/Game.js","components/Leaderboard/Leaderboard.js","components/About/About.js","App.js","reportWebVitals.js","index.js"],"names":["Tower","props","useDrag","type","item","from","towerNum","diskNum","disks","end","monitor","getDropResult","collect","isDragging","drag","useState","useDrop","accept","canDrop","length","drop","handleDiskMove","isOver","ref","className","id","map","index","style","width","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","GameComplete","playerName","setPlayerName","history","useHistory","game__complete","action","onSubmit","e","preventDefault","collection","add","level","towerLevel","movesCount","moveCount","timeCount","buildTime","then","push","catch","error","alert","time","name","placeholder","onChange","target","value","Game","gameCompleted","setGameCompleted","setMoveCount","gameTimer","setGameTimer","1","Array","gameLevel","keys","2","3","setDisks","fromTower","toTower","diskscopy","diskMoved","shift","prev","unshift","useEffect","interval","setInterval","clearInterval","DndProvider","backend","HTML5Backend","Leaderboard","records","setRecords","currentLevel","setCurrentLevel","records1","where","get","querySnapshot","forEach","doc","data","console","log","Number","sort","a","b","About","GameStart","start","setStart","setGameLevel","errors","setErrors","color","min","max","onInput","onClick","disabled","App","basename","path","exact","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ef63032.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Tower.css\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\n\r\nfunction Tower(props) {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"DISK\",\r\n    item: { from: props.towerNum, diskNum: props.disks },\r\n    end: (item, monitor) => {\r\n      const dropResult = monitor.getDropResult();\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const [disks, setDisks] = useState(props.disks);\r\n\r\n  const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n    accept: \"DISK\",\r\n    canDrop(item, monitor) {\r\n      if (props.disks.length === 0 || props.disks[0] > item.diskNum[0])\r\n        return true;\r\n    },\r\n    drop: (item, monitor) => {\r\n      // console.log(item.diskNum, props.disks[0]);\r\n      props.handleDiskMove(item.from, props.towerNum);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div ref={drop} className=\"tower-container\" id={props.towerNum}>\r\n      <div className=\"tower\">\r\n        {disks.map((item, index) => (\r\n          <div\r\n            ref={item === disks[0] ? drag : null}\r\n            className=\"disk\"\r\n            id={item}\r\n            style={{\r\n              width: item * 70 + \"px\",\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tower;\r\n","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyB28YEgJmDI3pLliL1pifZiW8zZo9170FY\",\r\n  authDomain: \"gameproject-bd008.firebaseapp.com\",\r\n  projectId: \"gameproject-bd008\",\r\n  storageBucket: \"gameproject-bd008.appspot.com\",\r\n  messagingSenderId: \"551406795341\",\r\n  appId: \"1:551406795341:web:f70fde7ee9c8b5da8efa04\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db };\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../GameComplete/GameComplete.css\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction GameComplete(props) {\r\n  const [playerName, setPlayerName] = useState(\"unknown\");\r\n  const history = useHistory();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    db.collection(\"playersRecords\")\r\n      .add({\r\n        level: props.towerLevel,\r\n        movesCount: props.moveCount,\r\n        playerName: playerName,\r\n        timeCount: props.buildTime,\r\n      })\r\n      .then(() => {\r\n        history.push(\"/leaderboard\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n    setPlayerName(\"\");\r\n  }\r\n\r\n  return (\r\n    <div game__complete>\r\n      {/* {recordSubmitted?<Lea} */}\r\n      <form action=\"/\" type=\"POST\" onSubmit={handleSubmit}>\r\n        <div className=\"game__complete-description\">\r\n          <p>Congratulations 🎉🎉🎉</p>\r\n          <p>\r\n            You built the {props.towerLevel}-disk Hanoi Tower in only\r\n            {props.buildTime}\r\n            {props.time} seconds and {props.moveCount} moves 👏.\r\n          </p>\r\n          <p>Please enter your name to be in the leaderboard!</p>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className=\"game__username-input\"\r\n          placeholder=\"your name\"\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n          value={playerName}\r\n        ></input>\r\n        <div>\r\n          <button type=\"submit\" className=\"game__btn\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameComplete;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Game.css\";\r\nimport Tower from \"../Tower/Tower\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport GameComplete from \"../GameComplete/GameComplete\";\r\n\r\nfunction Game(props) {\r\n  const [gameCompleted, setGameCompleted] = useState(false);\r\n  const [moveCount, setMoveCount] = useState(0);\r\n  const [gameTimer, setGameTimer] = useState(0);\r\n  const [disks, setDisks] = useState({\r\n    1: [...Array(props.gameLevel).keys()].map((item) => item + 1),\r\n    2: [],\r\n    3: [],\r\n  });\r\n\r\n  function handleDiskMove(fromTower = 1, toTower = 2) {\r\n    let diskscopy = { ...disks };\r\n    let diskMoved = diskscopy[fromTower].shift();\r\n    setMoveCount((prev) => prev + 1);\r\n    setDisks({\r\n      ...disks,\r\n      fromTower: diskscopy[fromTower],\r\n      toTower: diskscopy[toTower].unshift(diskMoved),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      setGameTimer((gameTimer) => gameTimer + 1);\r\n    }, 1000);\r\n\r\n    if (\r\n      disks[2].length === props.gameLevel ||\r\n      disks[3].length === props.gameLevel\r\n    ) {\r\n      clearInterval(interval);\r\n      setGameCompleted(true);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [disks]);\r\n\r\n  return (\r\n    <>\r\n      {gameCompleted ? (\r\n        <GameComplete\r\n          towerLevel={props.gameLevel}\r\n          buildTime={gameTimer}\r\n          moveCount={moveCount}\r\n        ></GameComplete>\r\n      ) : (\r\n        <div>\r\n          <div className=\"game__timer\">Time: {gameTimer} s</div>\r\n          <div className=\"game__move-count\">Moves: {moveCount}</div>\r\n          <div className=\"towers\">\r\n            <DndProvider backend={HTML5Backend}>\r\n              <Tower\r\n                disks={disks[\"1\"]}\r\n                handleDiskMove={handleDiskMove}\r\n                towerNum={1}\r\n              ></Tower>\r\n              <Tower\r\n                disks={disks[\"2\"]}\r\n                towerNum={2}\r\n                handleDiskMove={handleDiskMove}\r\n              ></Tower>\r\n              <Tower\r\n                disks={disks[\"3\"]}\r\n                towerNum={3}\r\n                handleDiskMove={handleDiskMove}\r\n              ></Tower>\r\n            </DndProvider>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Leaderboard/Leaderboard.css\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction Leaderboard() {\r\n  const [records, setRecords] = useState([]);\r\n  const [currentLevel, setCurrentLevel] = useState(3);\r\n\r\n  useEffect(() => {\r\n    let records1 = [];\r\n    db.collection(\"playersRecords\")\r\n      .where(\"level\", \"==\", currentLevel)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          records1.push(doc.data());\r\n        });\r\n        setRecords(records1);\r\n      });\r\n    console.log(records1);\r\n  }, [currentLevel]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"leaderboard__list\">\r\n        <span>Level:</span>\r\n\r\n        <select\r\n          id=\"levels\"\r\n          onChange={(e) => {\r\n            setCurrentLevel(Number(e.target.value));\r\n          }}\r\n        >\r\n          <option value={3}>Three</option>\r\n          <option value={4}>Four</option>\r\n          <option value={5}>Five</option>\r\n          <option value={6}>Six</option>\r\n          <option value={7}>Seven</option>\r\n        </select>\r\n      </div>\r\n\r\n      <table className=\"leaderboard__leaders-table\">\r\n        <tr>\r\n          <th>position</th>\r\n          <th>name</th>\r\n          <th>moves</th>\r\n          <th>time</th>\r\n        </tr>\r\n        {records\r\n          .sort((a, b) => a.timeCount - b.timeCount)\r\n          .map((item, index) => (\r\n            <tr>\r\n              <td>{index + 1}</td>\r\n              <td>{item[\"playerName\"]}</td>\r\n              <td>{item[\"movesCount\"]}</td>\r\n              <td>{item[\"timeCount\"]}</td>\r\n            </tr>\r\n            //   <span>{item}</span>\r\n          ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <div className=\"game__description\">\r\n        <p>\r\n          Hello 👋👋! In this game you have to solve a popular mathematical\r\n          game-puzzle called <strong>Hanoi Towers! </strong>\r\n          The objective of the puzzle is to move the entire stack to last rod,\r\n          obeying the following simple rules:\r\n        </p>\r\n        <p>Only one disk can be moved at a time. </p>\r\n        <p>\r\n          Each move consists of taking the upper disk from one of the stacks and\r\n          placing it on top of another stack or on an empty rod.\r\n        </p>\r\n        <p>No larger disk may be placed on top of a smaller disk.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\nimport Game from \"./components/Game/Game\";\nimport \"./App.css\";\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\";\nimport About from \"./components/About/About\";\n\nimport { HashRouter, Route, Switch, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <div className=\"app-container\">\n          <div className=\"app-main\">\n            <h1 className=\"game__title\">HANOI TOWERS</h1>\n\n            <Switch>\n              {/* <Route path=\"/home\" component={Game} /> */}\n              <Route path=\"/\" exact component={GameStart} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/leaderboard\" component={Leaderboard} />\n              {/* <Redirect from=\"/\" to=\"/home\" /> */}\n            </Switch>\n          </div>\n\n          <nav className=\"nav-menu\">\n            <ul className=\"nav-list\">\n              <li className=\"nav__item\">\n                <Link className=\"SectionNavigation-Item Section\" to={\"/\"}>\n                  Game\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link\n                  className=\"SectionNavigation-Item Section\"\n                  to={\"/leaderboard\"}\n                >\n                  Leaderboard\n                </Link>\n              </li>\n              <li className=\"nav__item\">\n                <Link className=\"SectionNavigation-Item Section\" to={\"/about\"}>\n                  About\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nconst GameStart = (props) => {\n  const [start, setStart] = useState(false);\n  const [gameLevel, setGameLevel] = useState(3);\n  const [errors, setErrors] = useState([]);\n\n  function handleStart(e) {\n    console.log(start);\n    setStart(true);\n  }\n\n  function handleLevelInput(e) {\n    if (e.target.value > 7) {\n      setErrors((prev) => [\n        \"Level can't be over 7 (It might just take you a bit longer than you think 🤭)\",\n      ]);\n    } else if (e.target.value < 3) {\n      setErrors((prev) => [\n        \"Level can't be less than 3 (You won't enjoy building it if it's that easy 😉)\",\n      ]);\n    } else {\n      setErrors([]);\n      setGameLevel(e.target.value || 3);\n    }\n  }\n\n  return (\n    <>\n      {!start && (\n        <>\n          <span>Please select the level: </span>\n          <span className=\"game__error-message\" style={{ color: \"red\" }}>\n            {errors}\n          </span>\n          <div className=\"game__level\">\n            <input\n              placeholder=\"Enter the level\"\n              type=\"number\"\n              className=\"game__level-input\"\n              name=\"level\"\n              min={3}\n              max={7}\n              onInput={handleLevelInput}\n            />\n\n            <div>\n              <button\n                className=\"game__btn\"\n                onClick={handleStart}\n                disabled={errors.length !== 0}\n              >\n                Start\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n      {start && <Game gameLevel={Number(gameLevel)}></Game>}\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}